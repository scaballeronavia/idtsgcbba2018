// Overlay menu positions the toggle in a corner (any), with the menu
// hidden. When toggled the menu opens in an overlay above the content
// and fills the whole screen.

@mixin overlay($toggle_position: (vert: top, horz: right), $arrows: false) {

  $vert: map-get($toggle_position, vert);
  $horz: map-get($toggle_position, horz);

  .ms-overlay {

    .rm-toggle {
      display: block;
      position: fixed;
      padding: 0;
      z-index: 1000;
      opacity: 0.5;
      background-color: rgba(0, 0, 0, 0.875);
      border-radius: $border-radius;
      @include output-rhythm(#{$vert}, $medium);
      @include output-rhythm(#{$horz}, $x-large);

      &:hover,
      &:focus {
        background-color: rgba(0, 0, 0, 0.95);
      }

      span {
        @include visually-hidden;
      }

      &__link {
        border: 0;
        box-sizing: content-box;
        @include output-rhythm(padding, $xx-small $medium);

        &:focus {
          outline: none;
        }
      }

      &__icon {
        @include output-rhythm(margin-top, 3px);
      }

      &__link,
      &__icon {
        background-color: transparent;

        &:hover,
        &:focus {
          background-color: transparent;
        }
      }
    }

    .rm-block__content {
      display: none;
      opacity: .001;
    }

    &.rm-is-open {
      .rm-toggle {
        opacity: 1;
        background-color: rgba(255, 255, 255, 1);

        &__icon {
          fill: rgba(0, 0, 0, 1);
        }
      }

      .rm-block__content {
        opacity: 1;
        display: block;
        position: absolute;
        background-color: rgba(0, 0, 0, 0.75);
        z-index: 990;

        @include output-rhythm(top, $small);
        @include output-rhythm(bottom, $small);
        @include output-rhythm(right, $small);
        @include output-rhythm(left, $small);

        .menu {
          background-color: transparent;

          &__link {
            @include output-rhythm(padding, $xx-small $large);
            @include output-rhythm(margin-bottom, 2px);
            background-color: rgba(0, 0, 0, 0.85);

            &:hover,
            &:focus,
            &.active {
              background-color: rgba(0, 0, 0, 0.95);
            }
          }

          &__link.active {
            &[href="/"] {
              background-color: rgba(0, 0, 0, 0.95);

              &:hover,
              &:focus {
                background-color: rgba(0, 0, 0, 0.95);
              }
            }
          }

          @if $arrows == false {
            &__link:after {
              content: none;
              display: none;
            }
          }
        }
      }
    }
  }
}
